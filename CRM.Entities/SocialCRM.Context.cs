//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRM.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SocialCRMEntities : DbContext
    {
        public SocialCRMEntities()
            : base("name=SocialCRMEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<ChannelScore> ChannelScores { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Email> Emails { get; set; }
        public virtual DbSet<EmailRight> EmailRights { get; set; }
        public virtual DbSet<MediaChannel> MediaChannels { get; set; }
        public virtual DbSet<MediaNew> MediaNews { get; set; }
        public virtual DbSet<MediaType> MediaTypes { get; set; }
        public virtual DbSet<NewsRelatedTo> NewsRelatedToes { get; set; }
        public virtual DbSet<NewsType> NewsTypes { get; set; }
        public virtual DbSet<Sentiment> Sentiments { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<EDReportFilter> EDReportFilters { get; set; }
        public virtual DbSet<MediaNewsAttachment> MediaNewsAttachments { get; set; }
    
        public virtual int DeleteChannelScores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteChannelScores");
        }
    
        public virtual int GetMediaReport(Nullable<int> userId, string mediaTypeIds, string newsTypeIds, string channelIds, string categoryIds, string relevanceIds, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string script, Nullable<bool> isKEActivity, Nullable<int> reportType, Nullable<int> filterType)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var mediaTypeIdsParameter = mediaTypeIds != null ?
                new ObjectParameter("MediaTypeIds", mediaTypeIds) :
                new ObjectParameter("MediaTypeIds", typeof(string));
    
            var newsTypeIdsParameter = newsTypeIds != null ?
                new ObjectParameter("NewsTypeIds", newsTypeIds) :
                new ObjectParameter("NewsTypeIds", typeof(string));
    
            var channelIdsParameter = channelIds != null ?
                new ObjectParameter("ChannelIds", channelIds) :
                new ObjectParameter("ChannelIds", typeof(string));
    
            var categoryIdsParameter = categoryIds != null ?
                new ObjectParameter("CategoryIds", categoryIds) :
                new ObjectParameter("CategoryIds", typeof(string));
    
            var relevanceIdsParameter = relevanceIds != null ?
                new ObjectParameter("RelevanceIds", relevanceIds) :
                new ObjectParameter("RelevanceIds", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var scriptParameter = script != null ?
                new ObjectParameter("Script", script) :
                new ObjectParameter("Script", typeof(string));
    
            var isKEActivityParameter = isKEActivity.HasValue ?
                new ObjectParameter("IsKEActivity", isKEActivity) :
                new ObjectParameter("IsKEActivity", typeof(bool));
    
            var reportTypeParameter = reportType.HasValue ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(int));
    
            var filterTypeParameter = filterType.HasValue ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetMediaReport", userIdParameter, mediaTypeIdsParameter, newsTypeIdsParameter, channelIdsParameter, categoryIdsParameter, relevanceIdsParameter, fromDateParameter, toDateParameter, scriptParameter, isKEActivityParameter, reportTypeParameter, filterTypeParameter);
        }
    
        public virtual ObjectResult<GetMediaReportDrillDown_Result> GetMediaReportDrillDown(Nullable<int> userId, string mediaTypeIds, string newsTypeIds, string channelIds, string categoryIds, string relevanceIds, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string script, Nullable<bool> isKEActivity, Nullable<int> reportType, Nullable<int> filterType, string xAxis1, string xAxis2, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var mediaTypeIdsParameter = mediaTypeIds != null ?
                new ObjectParameter("MediaTypeIds", mediaTypeIds) :
                new ObjectParameter("MediaTypeIds", typeof(string));
    
            var newsTypeIdsParameter = newsTypeIds != null ?
                new ObjectParameter("NewsTypeIds", newsTypeIds) :
                new ObjectParameter("NewsTypeIds", typeof(string));
    
            var channelIdsParameter = channelIds != null ?
                new ObjectParameter("ChannelIds", channelIds) :
                new ObjectParameter("ChannelIds", typeof(string));
    
            var categoryIdsParameter = categoryIds != null ?
                new ObjectParameter("CategoryIds", categoryIds) :
                new ObjectParameter("CategoryIds", typeof(string));
    
            var relevanceIdsParameter = relevanceIds != null ?
                new ObjectParameter("RelevanceIds", relevanceIds) :
                new ObjectParameter("RelevanceIds", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var scriptParameter = script != null ?
                new ObjectParameter("Script", script) :
                new ObjectParameter("Script", typeof(string));
    
            var isKEActivityParameter = isKEActivity.HasValue ?
                new ObjectParameter("IsKEActivity", isKEActivity) :
                new ObjectParameter("IsKEActivity", typeof(bool));
    
            var reportTypeParameter = reportType.HasValue ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(int));
    
            var filterTypeParameter = filterType.HasValue ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(int));
    
            var xAxis1Parameter = xAxis1 != null ?
                new ObjectParameter("XAxis1", xAxis1) :
                new ObjectParameter("XAxis1", typeof(string));
    
            var xAxis2Parameter = xAxis2 != null ?
                new ObjectParameter("XAxis2", xAxis2) :
                new ObjectParameter("XAxis2", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMediaReportDrillDown_Result>("GetMediaReportDrillDown", userIdParameter, mediaTypeIdsParameter, newsTypeIdsParameter, channelIdsParameter, categoryIdsParameter, relevanceIdsParameter, fromDateParameter, toDateParameter, scriptParameter, isKEActivityParameter, reportTypeParameter, filterTypeParameter, xAxis1Parameter, xAxis2Parameter, pageNumberParameter, pageSizeParameter);
        }
    }
}
